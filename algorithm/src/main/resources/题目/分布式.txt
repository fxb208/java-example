1,分库分表设计
http://blog.720ui.com/2017/mysql_core_08_multi_db_table/

2,分库与分表带来的分布式困境与应对之策
	数据迁移与扩容问题
	表关联问题
	分页与排序问题
	分布式事务问题
	分布式全局唯一ID
分库与分表主要用于应对当前互联网常见的两个场景：海量数据和高并发。
然而，分库与分表是一把双刃剑，虽然很好的应对海量数据和高并发对数据库的冲击和压力，但是却提高的系统的复杂度和维护成本。
因此：需要结合实际需求，不宜过度设计，在项目一开始不采用分库与分表设计，而是随着业务的增长，
在无法继续优化的情况下，再考虑分库与分表提高系统的性能。
http://blog.720ui.com/2017/mysql_core_09_multi_db_table2/

3,分布式锁

优化
https://blog.csdn.net/A7695895/article/details/90298013
这篇博文提到分段锁，在配网移动中，也可以这样做，根据区局维度拆分
这个可以做的项目试试